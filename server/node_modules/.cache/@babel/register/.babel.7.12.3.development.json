{
  "{\"sourceRoot\":\"/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/qiyuwang/Documents/Web_Projects/React/MERN/server\",\"filename\":\"/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/qiyuwang/Documents/Web_Projects/React/MERN/server\",\"plugins\":[],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server",
      "filename": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport cors from 'cors';\nconst app = express();\napp.use(bodyParser.json({\n  limit: \"30mb\",\n  extended: true\n}));\napp.use(bodyParser.urlencoded({\n  limit: \"30mb\",\n  extended: true\n}));\napp.use(cors());\nconst CONNECTION_URL = 'mongodb+srv://new-user:tRMZz7RiTc1JecGf@cluster0.o28kv.mongodb.net/<dbname>?retryWrites=true&w=majority';\nconst PORT = process.env.PORT || 5000;\nmongoose.connect(CONNECTION_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => app.listen(PORT, () => console.log(`Server running on port : ${PORT}`))).catch(e => console.log(error.message));\nmongoose.set('useFindAndModify', false);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUmVhY3RET00iLCJib2R5UGFyc2VyIiwibW9uZ29vc2UiLCJjb3JzIiwiYXBwIiwiZXhwcmVzcyIsInVzZSIsImpzb24iLCJsaW1pdCIsImV4dGVuZGVkIiwidXJsZW5jb2RlZCIsIkNPTk5FQ1RJT05fVVJMIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJjYXRjaCIsImUiLCJlcnJvciIsIm1lc3NhZ2UiLCJzZXQiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLFdBQXJCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUNBLE9BQU9DLFFBQVAsTUFBcUIsVUFBckI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLE1BQWpCO0FBRUEsTUFBTUMsR0FBRyxHQUFHQyxPQUFPLEVBQW5CO0FBRUFELEdBQUcsQ0FBQ0UsR0FBSixDQUFRTCxVQUFVLENBQUNNLElBQVgsQ0FBZ0I7QUFBRUMsRUFBQUEsS0FBSyxFQUFFLE1BQVQ7QUFBaUJDLEVBQUFBLFFBQVEsRUFBRTtBQUEzQixDQUFoQixDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0UsR0FBSixDQUFRTCxVQUFVLENBQUNTLFVBQVgsQ0FBc0I7QUFBRUYsRUFBQUEsS0FBSyxFQUFFLE1BQVQ7QUFBaUJDLEVBQUFBLFFBQVEsRUFBRTtBQUEzQixDQUF0QixDQUFSO0FBQ0FMLEdBQUcsQ0FBQ0UsR0FBSixDQUFRSCxJQUFJLEVBQVo7QUFFQSxNQUFNUSxjQUFjLEdBQUcseUdBQXZCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUVBVixRQUFRLENBQUNhLE9BQVQsQ0FBa0JKLGNBQWxCLEVBQWtDO0FBQUVLLEVBQUFBLGVBQWUsRUFBRSxJQUFuQjtBQUF5QkMsRUFBQUEsa0JBQWtCLEVBQUU7QUFBN0MsQ0FBbEMsRUFDaUJDLElBRGpCLENBQ3NCLE1BQU1kLEdBQUcsQ0FBQ2UsTUFBSixDQUFXUCxJQUFYLEVBQWlCLE1BQU1RLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDRCQUEyQlQsSUFBSyxFQUE3QyxDQUF2QixDQUQ1QixFQUVpQlUsS0FGakIsQ0FFd0JDLENBQUQsSUFBT0gsT0FBTyxDQUFDQyxHQUFSLENBQVlHLEtBQUssQ0FBQ0MsT0FBbEIsQ0FGOUI7QUFJQXZCLFFBQVEsQ0FBQ3dCLEdBQVQsQ0FBYSxrQkFBYixFQUFpQyxLQUFqQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcWl5dXdhbmcvRG9jdW1lbnRzL1dlYl9Qcm9qZWN0cy9SZWFjdC9NRVJOL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogXCIzMG1iXCIsIGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgbGltaXQ6IFwiMzBtYlwiLCBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGNvcnMoKSk7XG5cbmNvbnN0IENPTk5FQ1RJT05fVVJMID0gJ21vbmdvZGIrc3J2Oi8vbmV3LXVzZXI6dFJNWno3UmlUYzFKZWNHZkBjbHVzdGVyMC5vMjhrdi5tb25nb2RiLm5ldC88ZGJuYW1lPj9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuXG5tb25nb29zZS5jb25uZWN0KCBDT05ORUNUSU9OX1VSTCwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZX0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gYXBwLmxpc3RlbihQT1JULCAoKSA9PiBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gcG9ydCA6ICR7UE9SVH1gKSkpXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlKSA9PiBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKSk7XG5cbm1vbmdvb3NlLnNldCgndXNlRmluZEFuZE1vZGlmeScsIGZhbHNlKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "React",
        "ReactDOM",
        "bodyParser",
        "mongoose",
        "cors",
        "app",
        "express",
        "use",
        "json",
        "limit",
        "extended",
        "urlencoded",
        "CONNECTION_URL",
        "PORT",
        "process",
        "env",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "then",
        "listen",
        "console",
        "log",
        "catch",
        "e",
        "error",
        "message",
        "set"
      ],
      "mappings": "AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,GAAG,GAAGC,OAAO,EAAnB;AAEAD,GAAG,CAACE,GAAJ,CAAQL,UAAU,CAACM,IAAX,CAAgB;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAhB,CAAR;AACAL,GAAG,CAACE,GAAJ,CAAQL,UAAU,CAACS,UAAX,CAAsB;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAtB,CAAR;AACAL,GAAG,CAACE,GAAJ,CAAQH,IAAI,EAAZ;AAEA,MAAMQ,cAAc,GAAG,yGAAvB;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAV,QAAQ,CAACa,OAAT,CAAkBJ,cAAlB,EAAkC;AAAEK,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAlC,EACiBC,IADjB,CACsB,MAAMd,GAAG,CAACe,MAAJ,CAAWP,IAAX,EAAiB,MAAMQ,OAAO,CAACC,GAAR,CAAa,4BAA2BT,IAAK,EAA7C,CAAvB,CAD5B,EAEiBU,KAFjB,CAEwBC,CAAD,IAAOH,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,OAAlB,CAF9B;AAIAvB,QAAQ,CAACwB,GAAT,CAAa,kBAAb,EAAiC,KAAjC",
      "sourceRoot": "/Users/qiyuwang/Documents/Web_Projects/React/MERN/server/",
      "sourcesContent": [
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport cors from 'cors';\n\nconst app = express();\n\napp.use(bodyParser.json({ limit: \"30mb\", extended: true }));\napp.use(bodyParser.urlencoded({ limit: \"30mb\", extended: true }));\napp.use(cors());\n\nconst CONNECTION_URL = 'mongodb+srv://new-user:tRMZz7RiTc1JecGf@cluster0.o28kv.mongodb.net/<dbname>?retryWrites=true&w=majority'\nconst PORT = process.env.PORT || 5000;\n\nmongoose.connect( CONNECTION_URL, { useNewUrlParser: true, useUnifiedTopology: true})\n                .then(() => app.listen(PORT, () => console.log(`Server running on port : ${PORT}`)))\n                .catch((e) => console.log(error.message));\n\nmongoose.set('useFindAndModify', false);"
      ]
    },
    "sourceType": "module",
    "mtime": 1605321805713
  }
}